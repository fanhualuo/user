<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">
    <resultMap id="UserMap" type="User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="password" column="password"/>
        <result property="enabled" column="enabled"/>
        <result property="locked" column="locked"/>
        <result property="type" column="type"/>
        <result property="avatarUrl" column="avatar_url"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="tb">
        us_users
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `username`, `email`, `phone`, `password`, `enabled`, `locked`, `type`, `avatar_url`, 
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{username}, #{email}, #{phone}, #{password}, #{enabled}, #{locked}, #{type}, #{avatarUrl}, 
        now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="username != null">AND `username` = #{username}</if>
            <if test="email != null">AND `email` = #{email}</if>
            <if test="phone != null">AND `phone` = #{phone}</if>
            <if test="password != null">AND `password` = #{password}</if>
            <if test="enabled != null">AND `enabled` = #{enabled}</if>
            <if test="locked != null">AND `locked` = #{locked}</if>
            <if test="type != null">AND `type` = #{type}</if>
            <if test="avatarUrl != null">AND `avatar_url` = #{avatarUrl}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <insert id="create" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="UserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="UserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="User">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="username != null">`username` = #{username},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="phone != null">`phone` = #{phone},</if>
            <if test="password != null">`password` = #{password},</if>
            <if test="enabled != null">`enabled` = #{enabled},</if>
            <if test="locked != null">`locked` = #{locked},</if>
            <if test="type != null">`type` = #{type},</if>
            <if test="avatarUrl != null">`avatar_url` = #{avatarUrl},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updatePhone" parameterType="User">
        UPDATE
        <include refid="tb"/>
        SET `phone` = #{phone},updated_at = now()
        WHERE id = #{id}
    </update>

    <update id="updateEmail" parameterType="User">
        UPDATE
        <include refid="tb"/>
        SET `email` = #{email},updated_at = now()
        WHERE id = #{id}
    </update>


    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>
    
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="UserMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="UserMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>

</mapper>
